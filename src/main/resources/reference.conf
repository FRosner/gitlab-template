gitlab-template {

  // Time duration that has to pass between two rendering runs.
  render-frequency: 5s

  // Total timeout for getting the keys. This timeout has to be enough to get all keys.
  timeout: 60s

  source {
    gitlab {
      // URL to reach Gitlab. Note that it needs to have a protocol (e.g. http://) prefix.
      url: "http://localhost"

      // Only render keys of active users. Blocked users will be ignored.
      only-active-users: true

      // Private token to authenticate at Gitlab. See https://docs.gitlab.com/ee/api/#authentication for details.
      private-token: "GNvDFFr7SHzZf6Zte5Xq"

      // Pagination value for Gitlab. See https://docs.gitlab.com/ee/api/README.html#pagination for details.
      per-page: 100
    }

    technical-users-keys {
      // URL to the technical user key file. To test, you can `cd test/resources` and then `http-server` (node.js).
      url = "http://localhost:8080/technical-users.conf"

      // HTTP basic auth credentials for getting the technical users
      http-basic-auth {
        enabled = false
        username = "username"
        password = "password"
      }

      // Private token to authenticate at Gitlab in case you store the technical user config also there.
      private-token-auth {
        enabled = false
        token = "GNvDFFr7SHzZf6Zte5Xq"
      }
    }
  }

  sink {
    filesystem {
      // Create key files even if there are no keys for that user.
      create-empty-key-file: false

      // Location where user folders with authorized_keys file are created.
      path: "ssh-keys"

      // Name of the public keys file
      public-keys-file: "authorized_keys"
    }
  }

  // Do not create anything, just print log output.
  dry-run : false

}
